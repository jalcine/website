---
title: "Building Cloudcast"
byline: "Adventures with ES6, Ember and building API wrappers"
date: 2015-07-31 08:01:07 EDT
category: projects
tags:
  - ember
  - es6
  - testing
  - javascript
  - projects
  - cloudcast
---

A while back, I mentioned the idea of using [Soundcloud][] as a storage backend for
podcasts to a friend on Twitter (hi Bo!):

{% twitter oembed https://twitter.com/jackyalcine/status/601051053296066561 %}

Now, if you don't already have a service for podcasting and you don't mind
spending $12 a month for the service, I know quite a few people who use
[Simplecast][] and are content! However, a large portion of the podcasts I end
up listening to are stored on Soundcloud. That, coupled with the fact that I
don't have Soundcloud installed on my Android or iOS devices makes it a bit
complicated for listening. The services _does_ provide a means of connecting a
[SoundCloud account to iTunes for podcasting][1], but I don't use iTunes on my Linux
laptop. Coupled with the fact that Soundcloud has a dedicated but implicit [portal
for podcasting][2] behind a pay wall (for the content producers), most of these
services don't make it easy for me to import the content into something like
[gpodder][] or [Amarok][].

## Building from Nothing

[Iheanyi][]'s mentioned the awesomeness of [Ember][] a lot and I decided that
this project would be a good opportunity to work on something new. I managed to
get the base of the application up and going up using that platform quite
easily. I also managed to put what I learned about ES6 to use.

## Refining the Platform

{% comment %} Chat about how the UI was refined to make it more simple. {% endcomment %}

## Building A Community

{% comment %}
  * Mention how Buffer was used to allow people to share information across platforms.
  * Mention the ability for users to share and subscribe to their favorite podcasts.
  * Mention efficient support for Facebook, Twitter and Tubmlr via oEmbed tools.
{% endcomment %}

## Future Ambitions

{% comment %}
  * Mention the potential of allowing audio to be uploaded directly to break
    from Soundcloud.
  * Consider implementing an API that one can use to build client applications.
  * Consider launching the Android application.
{% endcomment %}

[simplecast]: https://simplecast.fm/
[soundcloud]: https://soundcloud.com/
[gpodder]: http://gpodder.net/
[amarok]: https://amarok.kde.org/
[iheanyi]: https://twitter.com/kwuchu
[ember]: http://emberjs.com/
[1]: http://help.soundcloud.com/customer/portal/articles/1209292-can-i-podcast-with-soundcloud-
[2]: https://soundcloud.com/for/podcasting
